name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-3

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build Docker image
      run: |
        docker build -t project-code .
        docker tag project-code:latest 816069121964.dkr.ecr.ap-northeast-3.amazonaws.com/project-code:latest

    - name: Push Docker image to ECR
      run: |
        docker push 816069121964.dkr.ecr.ap-northeast-3.amazonaws.com/project-code:latest

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.0.25'

    - name: Get K8s context
      uses: azure/aks-set-context@v3
      with:
        resource-group: MANAV_RESOURCE
        cluster-name: MY_AKS_CLUSTER
        admin: 'false'
        use-kubelogin: 'true'

    - name: Deploy to AKS
      run: |
        kubectl apply -f deployment.yml
        kubectl apply -f service.yml
        # kubectl rollout restart deployment/<your_deployment_name>
